version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - ./zookeeper:/data
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - backend
  
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - 9092:9092
    volumes:
      - "./kafka:/data"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - backend
    depends_on:
      - zookeeper

  postgres:
    image: postgres:alpine3.18
    container_name: postgres
    environment:       
      - POSTGRES_DB=base-go-kafka
      - POSTGRES_USER=mix
      - POSTGRES_PASSWORD=123
      - POSTGRES_ROOT_PASSWORD=123
    ports: 
      - 5432:5432
    volumes: 
      - ./postgres:/var/lib/postgres
    networks:
      - backend
      

networks:
  backend:

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

# kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092
# kafka/bin/kafka-topics.sh --create --topic mytopic --partitions 2 --bootstrap-server localhost:9092 --replication-factor 1
